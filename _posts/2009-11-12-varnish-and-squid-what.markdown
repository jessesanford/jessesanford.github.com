--- 
wordpress_id: 23
layout: post
title: Varnish and Squid working together... What?!
date: 2009-11-12 15:43:35 -05:00
wordpress_url: http://www.jessesanford.com/?p=23
---
I have been using Varnish for quite some time and have always wished that there was some way for Varnish to know to serve "Stale" pages when the upstream application servers are swamped. There is actually a feature request for this on the Varnish Trac system <a href="http://varnish.projects.linpro.no/ticket/369" target="_blank">here</a>. NOTE: this feature should not really be necessary unless you have underestimated the ability of your application servers to handle your traffic. However even after proper capacity planning sometimes you get well... DUGG. We all know the "digg effect" (formerly referred to as the "slashdot effect") and it's repercussions (500, Guru meditation, Houston we have a problem!) There are many ways to skin a cat, but none would be as simple as this (considering we have an existing varnish setup). I should note that simply getting "Dugg" or "Slashdotted" normally wouldn't take down a site with a proper reverse proxy setup based on Varnish. If your TTL is appropriate and you are using an appropriate <a href="http://varnish.projects.linpro.no/wiki/VCLExampleGrace" target="_blank">GRACE</a> value (for you Squid readers: "<a href="http://www.igvita.com/2009/08/05/masking-latency-failures-with-squid/comment-page-1/" target="_blank">stale-while-revalidate</a>") then you will probably not saturate your app servers. Unfortunately if your content is good and your UI is right then maybe, just maybe a certain percentage of your new readers will stick around. And here is where it gets scary for the app servers. Maybe just, maybe your new readers will start to navigate in ways that your cache is not used to. Maybe they will start to hit those really OLD articles that haven't been requested in months! If you think about your sites content vs it's popularity you it will look something like this:

<img class="alignnone size-medium wp-image-27" title="Cache Bell Curve" src="http://www.jessesanford.com/wp-content/uploads/2009/11/ttl_cache_bell_curve1-300x210.png" alt="Cache Bell Curve" width="300" height="210" />

No matter what you do there will always be something that falls into those "long tails" if your traffic patterns shift suddenly you can very well start to make a lot more request to your upstream servers than you (or more importantly your reverse proxy) expected.

Back to the task at hand. What can I do while I wait for the Varnish team to put this feature through? EASY... use Squid! There are so many debates over which reverse proxy is currently the fastest, which one is easier to setup or integrate with legacy apps etc. <a href="http://varnish.projects.linpro.no/wiki/ArchitectNotes" target="_blank">I'm</a> <a href="http://deserialized.com/reverse-proxy-performance-varnish-vs-squid-part-1/" target="_blank">certainly</a> <a href="http://deserialized.com/reverse-proxy-performance-varnish-vs-squid-part-2/" target="_blank">NOT</a> <a href="http://dotimes.com/iscale/2008/04/benchmark-caching-of-varnish-and-squid-again.html" target="_blank">trying</a> <a href="http://wfelipe.wordpress.com/2009/08/13/squid-vs-varnish/" target="_blank">to</a> <a href="http://www.kitchensoap.com/2008/06/24/varnish-and-squid-again/" target="_blank">get</a> <a href="http://t-a-w.blogspot.com/2007/04/varnish-vs-squid-assembly-still-matters.html" target="_blank">into</a> <a href="http://seankelly.tv/blog/blogentry.2007-03-02.4768602564" target="_blank">that</a>! In fact I will skirt the issue entirely saying this: when the features are right and you can afford to use it then why not? NOW don't get me wrong. Afford can mean a lot of things. Take it as you will. I personally HATE using software, ANY software when I don't have to. In fact I try to design my stacks as small as possible. As a general rule LESS SOFTWARE IS BETTER! It means less maintenance, less quality assurance... less hastle! However there are situations like the one I described above when you are put between a rock and a hard place. I can either:

A) Swap Varnish out completely and start using squid.

B) Augment my http acceleration layer with squid.

C) Buy more application servers and avoid the issue.

I wish, I wish, I wish C was always an option. Unfortunately not all client's can afford to simply throw more money at the problem. If I had my choice I would scale horizontally off to the...horizon. SO I now get to choose between A and B. A is what my Sysadmin gut feeling (aboutÂ never using more software than necessary) is telling me to do. BUT A also has the Test Engineer in me screaming "You will have to test everything all over again!"

Sooo here is another instance where the REAL WORLD comes crashing down on good systems engineering. B) is the cheapest most cost effective solution. It could be said that maintaing another piece of software over time is going to be more costly than the upfront cost of swapping out Varnish entirely. But consider this...the Varnish feature that I was mentioning earlier... has already been assigned. It is only a matter of time before someone decides to pick it up and implement it. Hell I might even go ahead and do it if I can find the time. (BTW if your reading this month's past the publish date of this post then you should definitely check that Trac ticket and see what has become of it.)

So B) it is. Now I am going to have to dust off my Squid skills and install that beast again. (Of course I couldn't get through an article about varnish and squid with out some opinion.... Setting up Squid is not the easiest thing in the world!)
